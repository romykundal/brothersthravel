<?php

/**
 * Inquiries
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Inquiries extends BaseInquiries
{
	
	/**
	 * Author  Rohit
	 * @param varchar $params
	 * return Array
	 * Version 1.0
	 */
	
	public static function getOrderlist($params){
		
		$srh = isset($params["searchtext"]) ? $params["searchtext"] : '';
		
		$data = Doctrine_Query::create()
				->select('g.*,c.name as catg_name')
				->from('inquiries g')
				->leftJoin("g.Category c")
				->where('g.name LIKE ?', "$srh%")
				->orderBy('g.id DESC');
		
		return Zend_Json::encode(DataTable_Helper::generateDataTableResponse($data, 
				$params, 
				array("__identifier" => 'g.name', 'g.phoneNumber', 'g.departure', 'g.arrival', 'g.departureDate', 'g.returnDate', 'g.travelType', 'g.departureTime', 'g.returnTime', 'g.status', 'g.created_at','g.updated_at'),
						array(),
						array()
				));
		exit();
		
	}
	
	/**
	 * Save 
	 * @author Rohit
	 * @version 1.0
	 */
	
	public static function saveInquiry($data)
	{

		  $Obj = new Inquiries();
		  $Obj->name = BackEnd_Helper_viewHelper::stripSlashesFromString($data["name"]);
		  $Obj->email = BackEnd_Helper_viewHelper::stripSlashesFromString($data["email"]);
		  $Obj->phoneNumber = BackEnd_Helper_viewHelper::stripSlashesFromString($data["phone"]);
		  $Obj->address = BackEnd_Helper_viewHelper::stripSlashesFromString($data["address"]);
		  $Obj->travelDate = BackEnd_Helper_viewHelper::stripSlashesFromString($data["travelDate"]);
		  $Obj->returnDate = BackEnd_Helper_viewHelper::stripSlashesFromString($data["returnDate"]);
		  $Obj->pickup_location = BackEnd_Helper_viewHelper::stripSlashesFromString($data["pickup_location"]);
		  $Obj->quantity_member = BackEnd_Helper_viewHelper::stripSlashesFromString($data["quantity"]);
		  $Obj->desination = BackEnd_Helper_viewHelper::stripSlashesFromString($data["desination"]);
		  $Obj->category_id = BackEnd_Helper_viewHelper::stripSlashesFromString($data["catg"]);
		  
		  $Obj->save();
		  $lid = $Obj->id;
		  
		return $lid ;
	}


		function updateInquiry($params){
			
		$this->baseFare = BackEnd_Helper_viewHelper::stripSlashesFromString($params['baseFare']);
		$this->surcharges = BackEnd_Helper_viewHelper::stripSlashesFromString($params['surcharges']);
		$this->grandTotal = BackEnd_Helper_viewHelper::stripSlashesFromString($params['grandTotal']);
		$this->discount = BackEnd_Helper_viewHelper::stripSlashesFromString($params['discount']);
		$this->stop = BackEnd_Helper_viewHelper::stripSlashesFromString($params['stop']);
		$this->stopDetails = BackEnd_Helper_viewHelper::stripSlashesFromString($params['stopDetails']);
		$this->status = BackEnd_Helper_viewHelper::stripSlashesFromString($params['status']);
		
		$pageid = @$params['id'];
		
		try{
		//call cache function
			$page = $this->save();
			$pageId =  $this->id;
		
			return true;
		}catch (Exception $e){
			return false;
		}
		
	}

	
	/**
	 * get to five category
	 * @param string $keyword
	 * @return array $data
	 * @author Raman
	 * @version 1.0
	 */
	public static function searchProduct($keyword) {
	
		$data = Doctrine_Query::create()->select('g.title as name')
		->from("inquiries g")
		->where('g.deleted = 0')
		->andWhere("g.title LIKE ?", "%$keyword%")
		->orderBy("g.title ASC")
		->limit(5)
		->fetchArray();

		return $data;
	}
	
	/**
	 * Delete product photo by id
	 * @param integer $params
	 * @author Raman
	 * @version 1.0
	 */
	public static function deleteProduct($id) {
		$q = Doctrine_Query::create()->update('inquiries g')
		->set('g.deleted', 1)
		->where('g.id=?', $id)
		->execute();
		return true;
		
	}
	
	/**
	 * Author  Rohit
	 * @param integer $catId
	 * return Array
	 * Version 1.0
	 */
	
	public static function getproductForFront($catId){
	
		$data = Doctrine_Query::create()
		->select('g.*, cat.name,cat.description')
		->from('inquiries g')
		// ->leftJoin('g.Image img')
		->leftJoin('g.Category cat')
		->where('g.categoryid=?', $catId)
		->andWhere('cat.deleted = 0')
		->orderBy('g.id DESC')
		//->getSqlQuery();
		->fetchArray();
		return $data;
	}

	public static function getOrderDetails($oId){
	
		$data = Doctrine_Query::create()
		->select('g.*')
		->from('inquiries g')
		->where('g.id=?', $oId)
		->fetchOne(null , Doctrine::HYDRATE_ARRAY);
		return $data;
	}


	
}